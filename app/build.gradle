plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.groupal.ecommerce"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {

    implementation project(path: ':modules:shared:shared')
    implementation project(path: ':modules:shared:shared-data')
    implementation project(path: ':modules:shared:shared-presentation')
    implementation project(path: ':modules:configuration:configuration')
    implementation project(path: ':modules:configuration:configuration-data-network')
    implementation project(path: ':modules:configuration:configuration-data-local')
    implementation project(path: ':modules:user:user')
    implementation project(path: ':modules:user:user-data')
    implementation project(path: ':modules:user:user-presentation')
    implementation project(path: ':modules:product:product')
    implementation project(path: ':modules:product:product-data')
    implementation project(path: ':modules:product:product-presentation')
    implementation project(path: ':modules:shared:shared-presentation')

    implementation "androidx.core:core-ktx:$kotlin_version"

    implementation("androidx.compose:compose-bom:2023.01.00")
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.material:material")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation "androidx.activity:activity-compose:$activity_compose_version"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation("androidx.datastore:datastore-preferences:$datastore_version")

    // VIEWMODEL
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_lifecycle_version")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$viewmodel_lifecycle_version")
    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$viewmodel_lifecycle_version")

    //RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    //MOSHI
    kapt("com.squareup.moshi:moshi-kotlin-codegen:$moshi_version")
    implementation "com.squareup.moshi:moshi:$moshi_version"

    //CORRUTINAS
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_android_coroutines_version"

    //HILT DAGGER
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_version"

    //COIL
    implementation "io.coil-kt:coil-compose:$coil_version"

    //Navigation Compose
    implementation "androidx.navigation:navigation-compose:$compose_navigation_version"

    //DATA-STORE-PREFERENCES
    //implementation("androidx.datastore:datastore-preferences:$datastore_version")

    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // optional - RxJava2 support
    implementation("androidx.datastore:datastore-preferences-rxjava2:1.0.0")

    // optional - RxJava3 support
    implementation("androidx.datastore:datastore-preferences-rxjava3:1.0.0")

    //Splash screen
    implementation 'androidx.core:core-splashscreen:1.0.0'

    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$android_junit_version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Kotest
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    // Mockk
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        // Treat all Kotlin warnings as errors (disabled by default)
        allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'

        // Set JVM target to 1.8
        jvmTarget = "1.8"
    }
}

tasks.withType(Test) {
    systemProperty "robolectric.logging", "stdout"
}